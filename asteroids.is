#Initialize constants and structs
struct Entity = (pos, vector, rotation, img)
g = getGraphics("canvas")

#Create game objects
player = new Entity(new Vector(0, 0), new Vector(0, 0), 0, getImage("images\\ship.png"))

$
drawEntity(graphics, Entity) 
Draws a Entity object
graphics- the html5 canvas to draw to
Entity- a Entity object to draw
global- pure
graphics is mutated $
function drawEntity(graphics, entity) {
	graphics.translate(entity.pos.x, entity.pos.y)
	graphics.rotate(entity.rotation * Math.PI / 180)
	graphics.drawImage(entity.img, -entity.img.width / 2, -entity.img.height / 2)
	graphics.rotate(-entity.rotation * Math.PI / 180)
	graphics.translate(-entity.pos.x, -entity.pos.y)
}

function limit(vector, amt) {
	v = new Vector(vector.x, vector.y)
	if(v.x > amt)
		v.x = amt
	if(v.x < -amt)
		v.x = -amt
	if(v.y > amt)
		v.y = amt
	if(v.y < -amt)
		v.y = -amt
	return v
}
$
step()
advances the game state by one frame
impure
$
function step() {
	var WIDTH = 960, HEIGHT = 540
	if(Keyboard["37"])
		player.rotation -= 4
	if(Keyboard["39"])
		player.rotation += 4
	if(Keyboard["38"]) 
		player.vector = addVector(player.vector, angleToVector(player.rotation, 0.1))
	player.pos = wrap(addVector(player.pos, player.vector), WIDTH, HEIGHT)
	player.vector = limit(player.vector, 5)
	
	g.clearRect(0, 0, 960, 540)
	g.fillStyle = "#FFFFFF"
	drawEntity(g, player)
}
function main() {
	setInterval(step, 1000 / 60)
}
main()